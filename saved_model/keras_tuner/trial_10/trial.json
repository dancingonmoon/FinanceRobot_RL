{"trial_id": "10", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "horizon", "default": null, "conditions": [], "min_value": 1, "max_value": 15, "step": 1, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "lookback", "default": 225, "conditions": [], "values": [225, 365, 1095, 2190, 4380], "ordered": true}}, {"class_name": "Boolean", "config": {"name": "MarketFactor", "default": false, "conditions": []}}, {"class_name": "Choice", "config": {"name": "lags", "default": 3, "conditions": [], "values": [3, 5, 7, 10, 12, 24, 64, 84, 168], "ordered": true}}, {"class_name": "Choice", "config": {"name": "gamma", "default": 0.5, "conditions": [], "values": [0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.92, 0.95, 0.98], "ordered": true}}, {"class_name": "Choice", "config": {"name": "batch_size", "default": 16, "conditions": [], "values": [16, 32, 64, 128], "ordered": true}}, {"class_name": "Choice", "config": {"name": "n_step", "default": 1, "conditions": [], "values": [1, 3, 5, 7, 10, 20, 32, 64, 128, 256], "ordered": true}}, {"class_name": "Choice", "config": {"name": "gae_lambda", "default": 0.8, "conditions": [], "values": [0.8, 0.85, 0.9, 0.92, 0.94, 0.96, 0.98, 0.99], "ordered": true}}, {"class_name": "Choice", "config": {"name": "gradient_clip_norm", "default": 0.1, "conditions": [], "values": [0.1, 0.2, 0.5, 1.0, 2.0, 5.0, 10.0], "ordered": true}}, {"class_name": "Choice", "config": {"name": "epochs", "default": 3, "conditions": [], "values": [3, 5], "ordered": true}}, {"class_name": "Choice", "config": {"name": "actor_lr", "default": 0.001, "conditions": [], "values": [0.001, 0.0005, 0.0001, 5e-05, 1e-05], "ordered": true}}, {"class_name": "Choice", "config": {"name": "critic_lr", "default": 0.001, "conditions": [], "values": [0.001, 0.0005, 0.0001, 5e-05, 1e-05], "ordered": true}}], "values": {"horizon": 12, "lookback": 1095, "MarketFactor": true, "lags": 24, "gamma": 0.6, "batch_size": 32, "n_step": 20, "gae_lambda": 0.85, "gradient_clip_norm": 0.5, "epochs": 3, "actor_lr": 0.0001, "critic_lr": 0.0005}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"C:\\Users\\shoub\\anaconda3\\envs\\DataScience\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 270, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\shoub\\anaconda3\\envs\\DataScience\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 235, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"L:\\Python_WorkSpace\\\u91cf\u5316\u4ea4\u6613\\FinanceRobot\\FinanceRobot_KerasTuner.py\", line 264, in run_trial\n    Backtest_wealth = FinRobotSearchSpace(\n  File \"L:\\Python_WorkSpace\\\u91cf\u5316\u4ea4\u6613\\FinanceRobot\\FinanceRobot_KerasTuner.py\", line 247, in FinRobotSearchSpace\n    FinR_Agent_PPO.nworker_nstep_training_loop(updates=updates)\n  File \"L:\\Python_WorkSpace\\\u91cf\u5316\u4ea4\u6613\\FinanceRobot\\FinanceRobot_PPOModel_lib.py\", line 534, in nworker_nstep_training_loop\n    self.nworker_nstep_train(samples)\n  File \"L:\\Python_WorkSpace\\\u91cf\u5316\u4ea4\u6613\\FinanceRobot\\FinanceRobot_PPOModel_lib.py\", line 493, in nworker_nstep_train\n    loss, approx_kl_divergence = self.step_train(\n  File \"C:\\Users\\shoub\\anaconda3\\envs\\DataScience\\lib\\site-packages\\tensorflow\\python\\eager\\def_function.py\", line 885, in __call__\n    result = self._call(*args, **kwds)\n  File \"C:\\Users\\shoub\\anaconda3\\envs\\DataScience\\lib\\site-packages\\tensorflow\\python\\eager\\def_function.py\", line 917, in _call\n    return self._stateless_fn(*args, **kwds)  # pylint: disable=not-callable\n  File \"C:\\Users\\shoub\\anaconda3\\envs\\DataScience\\lib\\site-packages\\tensorflow\\python\\eager\\function.py\", line 3039, in __call__\n    return graph_function._call_flat(\n  File \"C:\\Users\\shoub\\anaconda3\\envs\\DataScience\\lib\\site-packages\\tensorflow\\python\\eager\\function.py\", line 1963, in _call_flat\n    return self._build_call_outputs(self._inference_function.call(\n  File \"C:\\Users\\shoub\\anaconda3\\envs\\DataScience\\lib\\site-packages\\tensorflow\\python\\eager\\function.py\", line 591, in call\n    outputs = execute.execute(\n  File \"C:\\Users\\shoub\\anaconda3\\envs\\DataScience\\lib\\site-packages\\tensorflow\\python\\eager\\execute.py\", line 59, in quick_execute\n    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\ntensorflow.python.framework.errors_impl.ResourceExhaustedError:  OOM when allocating tensor with shape[5111,1,384] and type float on /job:localhost/replica:0/task:0/device:CPU:0 by allocator cpu\n\t [[node gradient_tape/Actor/Decompose_FF_Linear/conv1d_12/conv1d/Conv2DBackpropInput (defined at L:\\Python_WorkSpace\\\u91cf\u5316\u4ea4\u6613\\FinanceRobot\\FinanceRobot_PPOModel_lib.py:452) ]]\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info. This isn't available when running in Eager mode.\n [Op:__inference_step_train_1259845061]\n\nErrors may have originated from an input operation.\nInput Source operations connected to node gradient_tape/Actor/Decompose_FF_Linear/conv1d_12/conv1d/Conv2DBackpropInput:\n Actor/Decompose_FF_Linear/conv1d_12/conv1d/ExpandDims_1 (defined at L:\\Python_WorkSpace\\\u91cf\u5316\u4ea4\u6613\\FinanceRobot\\FinanceRobot_DDQNModel_lib.py:130)\n\nFunction call stack:\nstep_train\n\n"}