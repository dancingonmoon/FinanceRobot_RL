{"trial_id": "37", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "horizon", "default": null, "conditions": [], "min_value": 1, "max_value": 15, "step": 1, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "lookback", "default": 225, "conditions": [], "values": [225, 365, 1095, 2190, 4380], "ordered": true}}, {"class_name": "Boolean", "config": {"name": "MarketFactor", "default": false, "conditions": []}}, {"class_name": "Choice", "config": {"name": "lags", "default": 3, "conditions": [], "values": [3, 5, 7, 10, 12, 24, 64, 84, 168], "ordered": true}}, {"class_name": "Choice", "config": {"name": "gamma", "default": 0.5, "conditions": [], "values": [0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.92, 0.95, 0.98], "ordered": true}}, {"class_name": "Choice", "config": {"name": "batch_size", "default": 16, "conditions": [], "values": [16, 32, 64, 128], "ordered": true}}, {"class_name": "Choice", "config": {"name": "n_step", "default": 1, "conditions": [], "values": [1, 3, 5, 7, 10, 20, 32, 64, 128, 256], "ordered": true}}, {"class_name": "Choice", "config": {"name": "gae_lambda", "default": 0.8, "conditions": [], "values": [0.8, 0.85, 0.9, 0.92, 0.94, 0.96, 0.98, 0.99], "ordered": true}}, {"class_name": "Choice", "config": {"name": "gradient_clip_norm", "default": 0.1, "conditions": [], "values": [0.1, 0.2, 0.5, 1.0, 2.0, 5.0, 10.0], "ordered": true}}, {"class_name": "Choice", "config": {"name": "epochs", "default": 3, "conditions": [], "values": [3, 5], "ordered": true}}, {"class_name": "Choice", "config": {"name": "actor_lr", "default": 0.001, "conditions": [], "values": [0.001, 0.0005, 0.0001, 5e-05, 1e-05], "ordered": true}}, {"class_name": "Choice", "config": {"name": "critic_lr", "default": 0.001, "conditions": [], "values": [0.001, 0.0005, 0.0001, 5e-05, 1e-05], "ordered": true}}], "values": {"horizon": 9, "lookback": 225, "MarketFactor": true, "lags": 24, "gamma": 0.85, "batch_size": 64, "n_step": 32, "gae_lambda": 0.99, "gradient_clip_norm": 0.5, "epochs": 5, "actor_lr": 5e-05, "critic_lr": 0.0001}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"C:\\Users\\shoub\\anaconda3\\envs\\DataScience\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 270, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\shoub\\anaconda3\\envs\\DataScience\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 235, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"L:\\Python_WorkSpace\\\u91cf\u5316\u4ea4\u6613\\FinanceRobot\\FinanceRobot_KerasTuner.py\", line 263, in run_trial\n    Backtest_wealth = FinRobotSearchSpace(\n  File \"L:\\Python_WorkSpace\\\u91cf\u5316\u4ea4\u6613\\FinanceRobot\\FinanceRobot_KerasTuner.py\", line 247, in FinRobotSearchSpace\n    FinR_Agent_PPO.nworker_nstep_training_loop(updates=updates)\n  File \"L:\\Python_WorkSpace\\\u91cf\u5316\u4ea4\u6613\\FinanceRobot\\FinanceRobot_PPOModel_lib.py\", line 534, in nworker_nstep_training_loop\n    self.nworker_nstep_train(samples)\n  File \"L:\\Python_WorkSpace\\\u91cf\u5316\u4ea4\u6613\\FinanceRobot\\FinanceRobot_PPOModel_lib.py\", line 493, in nworker_nstep_train\n    loss, approx_kl_divergence = self.step_train(\n  File \"C:\\Users\\shoub\\anaconda3\\envs\\DataScience\\lib\\site-packages\\tensorflow\\python\\eager\\def_function.py\", line 885, in __call__\n    result = self._call(*args, **kwds)\n  File \"C:\\Users\\shoub\\anaconda3\\envs\\DataScience\\lib\\site-packages\\tensorflow\\python\\eager\\def_function.py\", line 933, in _call\n    self._initialize(args, kwds, add_initializers_to=initializers)\n  File \"C:\\Users\\shoub\\anaconda3\\envs\\DataScience\\lib\\site-packages\\tensorflow\\python\\eager\\def_function.py\", line 759, in _initialize\n    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access\n  File \"C:\\Users\\shoub\\anaconda3\\envs\\DataScience\\lib\\site-packages\\tensorflow\\python\\eager\\function.py\", line 3066, in _get_concrete_function_internal_garbage_collected\n    graph_function, _ = self._maybe_define_function(args, kwargs)\n  File \"C:\\Users\\shoub\\anaconda3\\envs\\DataScience\\lib\\site-packages\\tensorflow\\python\\eager\\function.py\", line 3463, in _maybe_define_function\n    graph_function = self._create_graph_function(args, kwargs)\n  File \"C:\\Users\\shoub\\anaconda3\\envs\\DataScience\\lib\\site-packages\\tensorflow\\python\\eager\\function.py\", line 3298, in _create_graph_function\n    func_graph_module.func_graph_from_py_func(\n  File \"C:\\Users\\shoub\\anaconda3\\envs\\DataScience\\lib\\site-packages\\tensorflow\\python\\framework\\func_graph.py\", line 1007, in func_graph_from_py_func\n    func_outputs = python_func(*func_args, **func_kwargs)\n  File \"C:\\Users\\shoub\\anaconda3\\envs\\DataScience\\lib\\site-packages\\tensorflow\\python\\eager\\def_function.py\", line 668, in wrapped_fn\n    out = weak_wrapped_fn().__wrapped__(*args, **kwds)\n  File \"C:\\Users\\shoub\\anaconda3\\envs\\DataScience\\lib\\site-packages\\tensorflow\\python\\eager\\function.py\", line 3990, in bound_method_wrapper\n    return wrapped_fn(*args, **kwargs)\n  File \"C:\\Users\\shoub\\anaconda3\\envs\\DataScience\\lib\\site-packages\\tensorflow\\python\\framework\\func_graph.py\", line 994, in wrapper\n    raise e.ag_error_metadata.to_exception(e)\ntensorflow.python.autograph.impl.api.StagingError: in user code:\n\n    L:\\Python_WorkSpace\\\u91cf\u5316\u4ea4\u6613\\FinanceRobot\\FinanceRobot_PPOModel_lib.py:441 step_train  *\n        pi = self.Actor(old_obs_batch)\n    L:\\Python_WorkSpace\\\u91cf\u5316\u4ea4\u6613\\FinanceRobot\\FinanceRobot_PPOModel_lib.py:49 call  *\n        x = self.Decompose_FF_linear(inputs)  # (N,1,out_features)\n    L:\\Python_WorkSpace\\\u91cf\u5316\u4ea4\u6613\\FinanceRobot\\FinanceRobot_DDQNModel_lib.py:120 call  *\n        seasonal_init, trend_init = self.decompsition(x)  # (Batch,seq_len,in_features)\n    L:\\Python_WorkSpace\\\u91cf\u5316\u4ea4\u6613\\FinanceRobot\\FinanceRobot_DDQNModel_lib.py:56 call  *\n        moving_mean = self.moving_avg(x)  # shape remains unchanged\n    C:\\Users\\shoub\\anaconda3\\envs\\DataScience\\lib\\site-packages\\keras\\engine\\base_layer.py:1037 __call__  **\n        outputs = call_fn(inputs, *args, **kwargs)\n    C:\\Users\\shoub\\anaconda3\\envs\\DataScience\\lib\\site-packages\\keras\\layers\\pooling.py:67 call\n        inputs = tf.expand_dims(inputs, pad_axis)\n    C:\\Users\\shoub\\anaconda3\\envs\\DataScience\\lib\\site-packages\\tensorflow\\python\\util\\dispatch.py:206 wrapper\n        return target(*args, **kwargs)\n    C:\\Users\\shoub\\anaconda3\\envs\\DataScience\\lib\\site-packages\\tensorflow\\python\\ops\\array_ops.py:437 expand_dims_v2\n        return gen_array_ops.expand_dims(input, axis, name)\n    C:\\Users\\shoub\\anaconda3\\envs\\DataScience\\lib\\site-packages\\tensorflow\\python\\ops\\gen_array_ops.py:2304 expand_dims\n        _execute.record_gradient(\n    C:\\Users\\shoub\\anaconda3\\envs\\DataScience\\lib\\site-packages\\tensorflow\\python\\eager\\backprop.py:182 record_gradient\n        pywrap_tfe.TFE_Py_RecordGradient(op_name, inputs, attrs, outputs,\n\n    OverflowError: Python int too large to convert to C long\n\n"}